version: '3.8'

services:
  # 前端应用
  frontend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://api-service:3000
      - REACT_APP_WS_URL=ws://api-service:3000/ws
    networks:
      - liqpro-network
    command: >
      sh -c "npm install --include=dev && 
             npm run start"

  # API服务
  api-service:
    image: node:18-alpine
    working_dir: /app/services/api-service
    ports:
      - "3001:3000"
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=production
    env_file:
      - ./services/api-service/.env.production
    networks:
      - liqpro-network
    depends_on:
      - mongodb
      - rabbitmq
    command: >
      sh -c "cd /app/libs/common && 
             sed -i 's/\"build\": \"tsc\"/\"build\": \"echo Skipping build\"/g' package.json && 
             mkdir -p dist && 
             cd /app/services/api-service && 
             rm -rf node_modules &&
             npm install && 
             npm install -g typescript && 
             npm install --save-dev @types/node @types/express @types/jest && 
             npm start"

  # 数据服务
  data-service:
    image: node:18-alpine
    working_dir: /app/services/data-service
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=production
    env_file:
      - ./services/data-service/.env.production
    networks:
      - liqpro-network
    depends_on:
      - mongodb
    command: >
      sh -c "cd /app/libs/common && 
             sed -i 's/\"build\": \"tsc\"/\"build\": \"echo Skipping build\"/g' package.json && 
             mkdir -p dist && 
             cd /app/services/data-service && 
             rm -rf node_modules &&
             npm install && 
             npm install -g typescript && 
             npm install --save-dev @types/node @types/express @types/jest && 
             npm run build && 
             node dist/index.js"

  # 信号服务
  signal-service:
    image: node:18-alpine
    working_dir: /app/services/signal-service
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=production
    env_file:
      - ./services/signal-service/.env.production
    networks:
      - liqpro-network
    depends_on:
      - mongodb
      - rabbitmq
    command: >
      sh -c "cd /app/services/signal-service && 
             npm install && 
             npm install -g typescript && 
             npx tsc --skipLibCheck --skipDefaultLibCheck --excludeFiles \"**/__tests__/**\" && 
             node dist/server.js"

  # 评分服务
  scoring-service:
    image: node:18-alpine
    working_dir: /app/services/scoring-service
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=production
    env_file:
      - ./services/scoring-service/.env.production
    networks:
      - liqpro-network
    depends_on:
      - mongodb
      - rabbitmq
    command: >
      sh -c "cd /app/libs/common && 
             sed -i 's/\"build\": \"tsc\"/\"build\": \"echo Skipping build\"/g' package.json && 
             mkdir -p dist && 
             cd /app/services/scoring-service && 
             rm -rf node_modules &&
             npm install && 
             npm install -g typescript && 
             npm install --save-dev @types/node @types/express @types/jest && 
             npm start"

  # Agent引擎
  agent-engine:
    image: node:18-alpine
    working_dir: /app/services/agent-engine
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=production
    env_file:
      - ./services/agent-engine/.env.production
    networks:
      - liqpro-network
    depends_on:
      - mongodb
      - rabbitmq
      - data-service
      - signal-service
      - scoring-service
    command: >
      sh -c "cd /app/libs/common && 
             sed -i 's/\"build\": \"tsc\"/\"build\": \"echo Skipping build\"/g' package.json && 
             mkdir -p dist && 
             cd /app/services/agent-engine && 
             rm -rf node_modules &&
             npm install && 
             npm install -g typescript && 
             npm install --save-dev @types/node @types/express @types/jest && 
             npm start"

  # MongoDB数据库
  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - liqpro-network

  # RabbitMQ消息队列
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=liqpro
      - RABBITMQ_DEFAULT_PASS=liqpro_password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - liqpro-network

networks:
  liqpro-network:
    driver: bridge

volumes:
  mongodb-data:
  rabbitmq-data: 