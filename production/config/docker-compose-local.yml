version: '3.8'

services:
  # 前端应用
  frontend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:3001
      - REACT_APP_WS_URL=ws://localhost:3001/ws
    networks:
      - liqpro-network
    command: >
      sh -c "npm install --include=dev && 
             npm run start"
    restart: unless-stopped

  # API服务
  api-service:
    image: node:18-alpine
    working_dir: /app/services/api-service
    ports:
      - "3001:3000"
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=production
      - SIGNAL_SERVICE_URL=http://signal-service:3000
      - DATA_SERVICE_URL=http://data-service:3000
      - SCORING_SERVICE_URL=http://scoring-service:3000
      - AGENT_SERVICE_URL=http://agent-engine:3000
    networks:
      - liqpro-network
    depends_on:
      - mongodb
      - rabbitmq
    command: >
      sh -c "cd /app/libs/common && 
             sed -i 's/\"build\": \"tsc\"/\"build\": \"echo Skipping build\"/g' package.json && 
             mkdir -p dist && 
             cd /app/services/api-service && 
             rm -rf node_modules &&
             npm install && 
             npm install -g typescript && 
             npm install --save-dev @types/node @types/express @types/jest && 
             npm start"
    restart: unless-stopped

  # 数据服务
  data-service:
    image: node:18-alpine
    working_dir: /app/services/data-service
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/liqpro
      - RABBITMQ_HOST=rabbitmq
      # Solana主网连接配置
      - SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
      - SOLANA_WEBSOCKET_URL=wss://api.mainnet-beta.solana.com
      - SOLANA_NETWORK=mainnet-beta
      - METEORA_DLMM_PROGRAM_ID=LMMMnnLL3xMsHQY5QgPmJgZDrYRKsRzuqJBD9RBaLUx
      - JUPITER_QUOTE_API_URL=https://quote-api.jup.ag/v6
      - MARKET_DATA_REFRESH_INTERVAL=60000
    networks:
      - liqpro-network
    depends_on:
      - mongodb
    command: >
      sh -c "cd /app/libs/common && 
             sed -i 's/\"build\": \"tsc\"/\"build\": \"echo Skipping build\"/g' package.json && 
             mkdir -p dist && 
             cd /app/services/data-service && 
             rm -rf node_modules &&
             npm install && 
             npm install -g typescript && 
             npm install --save-dev @types/node @types/express @types/jest && 
             npm run build && 
             node dist/index.js"
    restart: unless-stopped

  # 信号服务
  signal-service:
    image: node:18
    working_dir: /app/services/signal-service
    ports:
      - "3006:3000"
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/liqpro
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      # Solana主网连接配置
      - SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
      - SOLANA_WEBSOCKET_URL=wss://api.mainnet-beta.solana.com
      - SOLANA_NETWORK=mainnet-beta
      - METEORA_DLMM_PROGRAM_ID=LMMMnnLL3xMsHQY5QgPmJgZDrYRKsRzuqJBD9RBaLUx
      - JUPITER_QUOTE_API_URL=https://quote-api.jup.ag/v6
      - MARKET_DATA_REFRESH_INTERVAL=60000
    networks:
      - liqpro-network
    depends_on:
      - mongodb
      - rabbitmq
    command: >
      sh -c "cd /app/services/signal-service && 
             npm install && 
             npm install -g typescript && 
             npx tsc --skipLibCheck --skipDefaultLibCheck --excludeFiles \"**/__tests__/**\" && 
             node dist/server.js"
    restart: unless-stopped

  # 评分服务
  scoring-service:
    image: node:18-alpine
    working_dir: /app/services/scoring-service
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/liqpro
      - RABBITMQ_HOST=rabbitmq
      # Solana主网连接配置
      - SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
      - SOLANA_NETWORK=mainnet-beta
    networks:
      - liqpro-network
    depends_on:
      - mongodb
      - rabbitmq
    command: >
      sh -c "cd /app/libs/common && 
             sed -i 's/\"build\": \"tsc\"/\"build\": \"echo Skipping build\"/g' package.json && 
             mkdir -p dist && 
             cd /app/services/scoring-service && 
             rm -rf node_modules &&
             npm install && 
             npm install -g typescript && 
             npm install --save-dev @types/node @types/express @types/jest && 
             npm start"
    restart: unless-stopped

  # Agent引擎
  agent-engine:
    image: node:18-alpine
    working_dir: /app/services/agent-engine
    volumes:
      - ./:/app
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/liqpro
      - RABBITMQ_HOST=rabbitmq
      - SIGNAL_SERVICE_URL=http://signal-service:3000
      - DATA_SERVICE_URL=http://data-service:3000
      - SCORING_SERVICE_URL=http://scoring-service:3000
      # Solana主网连接配置
      - SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
      - SOLANA_NETWORK=mainnet-beta
      - METEORA_DLMM_PROGRAM_ID=LMMMnnLL3xMsHQY5QgPmJgZDrYRKsRzuqJBD9RBaLUx
      # 模拟模式 - 不执行真实交易
      - SIMULATION_MODE=true
    networks:
      - liqpro-network
    depends_on:
      - mongodb
      - rabbitmq
      - data-service
      - signal-service
      - scoring-service
    command: >
      sh -c "cd /app/libs/common && 
             sed -i 's/\"build\": \"tsc\"/\"build\": \"echo Skipping build\"/g' package.json && 
             mkdir -p dist && 
             cd /app/services/agent-engine && 
             rm -rf node_modules &&
             npm install && 
             npm install -g typescript && 
             npm install --save-dev @types/node @types/express @types/jest && 
             npm start"
    restart: unless-stopped

  # MongoDB数据库
  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - liqpro-network
    restart: unless-stopped

  # RabbitMQ消息队列
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=liqpro
      - RABBITMQ_DEFAULT_PASS=liqpro_password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - liqpro-network
    restart: unless-stopped

  # 添加Solana数据缓存服务
  solana-cache:
    image: node:18-alpine
    working_dir: /app/services/solana-cache
    volumes:
      - ./services/solana-cache:/app/services/solana-cache
    environment:
      - NODE_ENV=production
      - SOLANA_RPC_URL=https://api.mainnet-beta.solana.com
      - SOLANA_WEBSOCKET_URL=wss://api.mainnet-beta.solana.com
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_TTL=300
    networks:
      - liqpro-network
    depends_on:
      - redis
    command: >
      sh -c "cd /app/services/solana-cache && 
             npm install && 
             npm install -g typescript && 
             npm run build && 
             node dist/index.js"
    restart: unless-stopped

  # Redis缓存 - 用于缓存Solana数据
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - liqpro-network
    restart: unless-stopped

networks:
  liqpro-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  mongodb-data:
  rabbitmq-data:
  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/redis 