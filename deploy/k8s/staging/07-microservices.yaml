apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-service
  namespace: liqpro
  labels:
    app: data-service
    environment: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: data-service
  template:
    metadata:
      labels:
        app: data-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: data-service
        image: liqpro/data-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: NODE_ENV
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: MONGODB_URI
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: REDIS_PORT
        - name: SOLANA_RPC_URL
          valueFrom:
            secretKeyRef:
              name: liqpro-secrets
              key: SOLANA_RPC_URL
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: data-service
  namespace: liqpro
  labels:
    app: data-service
    environment: staging
spec:
  selector:
    app: data-service
  ports:
  - port: 3001
    targetPort: 3001
    name: http
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: signal-service
  namespace: liqpro
  labels:
    app: signal-service
    environment: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: signal-service
  template:
    metadata:
      labels:
        app: signal-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3002"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: signal-service
        image: liqpro/signal-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3002
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: NODE_ENV
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: MONGODB_URI
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: REDIS_PORT
        - name: DATA_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: DATA_SERVICE_URL
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: signal-service
  namespace: liqpro
  labels:
    app: signal-service
    environment: staging
spec:
  selector:
    app: signal-service
  ports:
  - port: 3002
    targetPort: 3002
    name: http
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scoring-service
  namespace: liqpro
  labels:
    app: scoring-service
    environment: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: scoring-service
  template:
    metadata:
      labels:
        app: scoring-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3003"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: scoring-service
        image: liqpro/scoring-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3003
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: NODE_ENV
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: MONGODB_URI
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: REDIS_PORT
        - name: SIGNAL_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: SIGNAL_SERVICE_URL
        - name: DATA_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: DATA_SERVICE_URL
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: scoring-service
  namespace: liqpro
  labels:
    app: scoring-service
    environment: staging
spec:
  selector:
    app: scoring-service
  ports:
  - port: 3003
    targetPort: 3003
    name: http
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-engine
  namespace: liqpro
  labels:
    app: agent-engine
    environment: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agent-engine
  template:
    metadata:
      labels:
        app: agent-engine
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3004"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: agent-engine
        image: liqpro/agent-engine:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3004
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: NODE_ENV
        - name: MONGODB_URI
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: MONGODB_URI
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: REDIS_PORT
        - name: SIGNAL_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: SIGNAL_SERVICE_URL
        - name: SCORING_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: SCORING_SERVICE_URL
        - name: DATA_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: liqpro-config
              key: DATA_SERVICE_URL
        - name: SOLANA_RPC_URL
          valueFrom:
            secretKeyRef:
              name: liqpro-secrets
              key: SOLANA_RPC_URL
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "1"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3004
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3004
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: agent-engine
  namespace: liqpro
  labels:
    app: agent-engine
    environment: staging
spec:
  selector:
    app: agent-engine
  ports:
  - port: 3004
    targetPort: 3004
    name: http
  type: ClusterIP 