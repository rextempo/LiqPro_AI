name: LiqPro CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint
      
      - name: Run tests
        run: npm test
  
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build TypeScript
        run: npm run build
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Set environment variables
        id: vars
        run: |
          if [[ $GITHUB_REF == refs/heads/main ]]; then
            echo "ENV=production" >> $GITHUB_ENV
            echo "TAG=latest" >> $GITHUB_ENV
          else
            echo "ENV=staging" >> $GITHUB_ENV
            echo "TAG=develop" >> $GITHUB_ENV
          fi
          echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      
      - name: Build and push API Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/api-service
          push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/liqpro-api-service:${{ env.TAG }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/liqpro-api-service:${{ env.SHA_SHORT }}
          build-args: |
            NODE_ENV=${{ env.ENV }}
      
      - name: Build and push Data Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/data-service
          push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/liqpro-data-service:${{ env.TAG }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/liqpro-data-service:${{ env.SHA_SHORT }}
          build-args: |
            NODE_ENV=${{ env.ENV }}
      
      - name: Build and push Signal Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/signal-service
          push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/liqpro-signal-service:${{ env.TAG }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/liqpro-signal-service:${{ env.SHA_SHORT }}
          build-args: |
            NODE_ENV=${{ env.ENV }}
      
      - name: Build and push Scoring Service
        uses: docker/build-push-action@v4
        with:
          context: ./services/scoring-service
          push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/liqpro-scoring-service:${{ env.TAG }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/liqpro-scoring-service:${{ env.SHA_SHORT }}
          build-args: |
            NODE_ENV=${{ env.ENV }}
      
      - name: Build and push Agent Engine
        uses: docker/build-push-action@v4
        with:
          context: ./services/agent-engine
          push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/liqpro-agent-engine:${{ env.TAG }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/liqpro-agent-engine:${{ env.SHA_SHORT }}
          build-args: |
            NODE_ENV=${{ env.ENV }}
  
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Deploy to staging server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            cd /opt/liqpro
            git pull
            export TAG=develop
            export ENVIRONMENT=staging
            export REGISTRY="${{ secrets.DOCKER_HUB_USERNAME }}/"
            docker-compose -f deploy/docker/docker-compose.staging.yml pull
            docker-compose -f deploy/docker/docker-compose.staging.yml down
            docker-compose -f deploy/docker/docker-compose.staging.yml up -d
            docker-compose -f deploy/docker/docker-compose.monitoring.yml down
            docker-compose -f deploy/docker/docker-compose.monitoring.yml up -d
  
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            cd /opt/liqpro
            git pull
            export TAG=latest
            export ENVIRONMENT=production
            export REGISTRY="${{ secrets.DOCKER_HUB_USERNAME }}/"
            docker-compose -f deploy/docker/docker-compose.prod.yml pull
            docker-compose -f deploy/docker/docker-compose.prod.yml down
            docker-compose -f deploy/docker/docker-compose.prod.yml up -d
            docker-compose -f deploy/docker/docker-compose.monitoring.yml down
            docker-compose -f deploy/docker/docker-compose.monitoring.yml up -d 