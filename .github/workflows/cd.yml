name: Continuous Deployment

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: liqpro/app
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=ref,event=branch
          type=sha,format=short
    
    - name: Build and push frontend
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=liqpro/app:buildcache
        cache-to: type=registry,ref=liqpro/app:buildcache,mode=max
    
    - name: Build and push services
      run: |
        for service in data-service signal-service scoring-service agent-engine api-service; do
          docker build -t liqpro/$service:${{ steps.meta.outputs.version }} -f ./services/$service/Dockerfile .
          docker push liqpro/$service:${{ steps.meta.outputs.version }}
        done
  
  deploy-to-staging:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    
    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name liqpro-staging-cluster --region us-west-2
    
    - name: Deploy to staging
      run: |
        # Update image tags in Kubernetes manifests
        VERSION=$(echo $GITHUB_REF | sed 's/refs\/tags\/v//')
        sed -i "s/image: liqpro\/app:.*/image: liqpro\/app:$VERSION/g" deploy/k8s/staging/*.yaml
        
        # Apply Kubernetes manifests
        kubectl apply -f deploy/k8s/staging/
        
        # Wait for deployment to complete
        kubectl rollout status deployment/frontend -n liqpro
        kubectl rollout status deployment/api-service -n liqpro
        kubectl rollout status deployment/agent-engine -n liqpro
        kubectl rollout status deployment/signal-service -n liqpro
        kubectl rollout status deployment/scoring-service -n liqpro
        kubectl rollout status deployment/data-service -n liqpro
  
  deploy-to-production:
    needs: deploy-to-staging
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    
    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name liqpro-production-cluster --region us-west-2
    
    - name: Deploy to production
      run: |
        # Update image tags in Kubernetes manifests
        VERSION=$(echo $GITHUB_REF | sed 's/refs\/tags\/v//')
        sed -i "s/image: liqpro\/app:.*/image: liqpro\/app:$VERSION/g" deploy/k8s/production/*.yaml
        
        # Apply Kubernetes manifests
        kubectl apply -f deploy/k8s/production/
        
        # Wait for deployment to complete
        kubectl rollout status deployment/frontend -n liqpro
        kubectl rollout status deployment/api-service -n liqpro
        kubectl rollout status deployment/agent-engine -n liqpro
        kubectl rollout status deployment/signal-service -n liqpro
        kubectl rollout status deployment/scoring-service -n liqpro
        kubectl rollout status deployment/data-service -n liqpro 