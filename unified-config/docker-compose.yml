version: '3.8'

services:
  # 前端服务
  frontend:
    image: node:${NODE_VERSION:-18-slim}
    container_name: liqpro-frontend
    working_dir: /app/frontend
    ports:
      - "3000:3000"
    volumes:
      - ../services/frontend:/app/frontend
      - ../config/frontend:/app/frontend/config
    env_file:
      - ../config/frontend/.env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - REACT_APP_API_URL=http://localhost:3001
      - REACT_APP_WS_URL=ws://localhost:3001/ws
      - HOT_RELOAD=${HOT_RELOAD:-true}
    networks:
      - liqpro-network
    command: >
      sh -c "npm install && if [ \"$NODE_ENV\" = \"production\" ]; then npm run build && npm run serve; else npm run start; fi"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # API服务
  api-service:
    image: node:${NODE_VERSION:-18}
    container_name: liqpro-api-service
    working_dir: /app/api-service
    ports:
      - "3001:3000"
    volumes:
      - ../services/api-service:/app/api-service
      - ../libs:/app/libs
      - ../config/api-service:/app/api-service/config
    env_file:
      - ../config/api-service/.env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATA_SERVICE_URL=http://data-service:3002
      - SCORING_SERVICE_URL=http://scoring-service:3000
      - AGENT_SERVICE_URL=http://agent-engine:3000
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - MONGODB_URI=mongodb://mongodb:27017/liqpro
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_TTL=300
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - USE_REAL_DATA=${USE_REAL_DATA:-true}
    networks:
      - liqpro-network
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    command: >
      sh -c "npm install && npm start"
    restart: unless-stopped

  # 数据服务
  data-service:
    image: node:${NODE_VERSION:-18-slim}
    container_name: liqpro-data-service
    working_dir: /app/data-service
    ports:
      - "3002:3002"
    volumes:
      - ../services/data-service:/app/data-service
      - ../libs:/app/libs
      - ../config/data-service:/app/data-service/config
    env_file:
      - ../config/data-service/.env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3002
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - MONGODB_URI=mongodb://mongodb:27017/liqpro
      - METEORA_API_URL=${METEORA_API_URL:-https://dlmm-api.meteora.ag}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - USE_REAL_DATA=${USE_REAL_DATA:-true}
    networks:
      - liqpro-network
    depends_on:
      - mongodb
      - rabbitmq
    command: >
      sh -c "npm install && node ${DATA_SERVICE_SCRIPT:-server-real.js}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # 信号服务
  signal-service:
    image: node:${NODE_VERSION:-18-slim}
    container_name: liqpro-signal-service
    working_dir: /app/signal-service
    ports:
      - "3003:3002"
    volumes:
      - ../services/signal-service:/app/signal-service
      - ../libs:/app/libs
      - ../config/signal-service:/app/signal-service/config
    env_file:
      - ../config/signal-service/.env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3002
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - MONGODB_URI=mongodb://mongodb:27017/liqpro
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - USE_REAL_DATA=${USE_REAL_DATA:-true}
    networks:
      - liqpro-network
    depends_on:
      - mongodb
      - rabbitmq
    command: >
      sh -c "npm install && npm start"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # 评分服务
  scoring-service:
    image: node:${NODE_VERSION:-18-slim}
    container_name: liqpro-scoring-service
    working_dir: /app/scoring-service
    ports:
      - "3004:3000"
    volumes:
      - ../services/scoring-service:/app/scoring-service
      - ../libs:/app/libs
      - ../config/scoring-service:/app/scoring-service/config
    env_file:
      - ../config/scoring-service/.env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - MONGODB_URI=mongodb://mongodb:27017/liqpro
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - USE_REAL_DATA=${USE_REAL_DATA:-true}
    networks:
      - liqpro-network
    depends_on:
      - mongodb
      - rabbitmq
    command: >
      sh -c "npm install && npm start"
    restart: unless-stopped

  # Agent引擎
  agent-engine:
    image: node:${NODE_VERSION:-18-slim}
    container_name: liqpro-agent-engine
    working_dir: /app/agent-engine
    ports:
      - "3005:3000"
    volumes:
      - ../services/agent-engine:/app/agent-engine
      - ../libs:/app/libs
      - ../config/agent-engine:/app/agent-engine/config
    env_file:
      - ../config/agent-engine/.env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - MONGODB_URI=mongodb://mongodb:27017/liqpro
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - USE_REAL_DATA=${USE_REAL_DATA:-true}
    networks:
      - liqpro-network
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    command: >
      sh -c "npm install && npm start"
    restart: unless-stopped

  # Solana缓存服务
  solana-cache:
    image: node:${NODE_VERSION:-18-slim}
    container_name: liqpro-solana-cache
    working_dir: /app/solana-cache
    ports:
      - "3006:3000"
    volumes:
      - ../services/solana-cache:/app/solana-cache
      - ../config/solana-cache:/app/solana-cache/config
    env_file:
      - ../config/solana-cache/.env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3000
      - SOLANA_RPC_ENDPOINT=${SOLANA_RPC_ENDPOINT:-https://api.mainnet-beta.solana.com}
      - CACHE_REFRESH_INTERVAL=${CACHE_REFRESH_INTERVAL:-60000}
      - MONGODB_URI=mongodb://mongodb:27017/liqpro
      - USE_REAL_DATA=${USE_REAL_DATA:-true}
    networks:
      - liqpro-network
    depends_on:
      - mongodb
    command: >
      sh -c "npm install && npm start"
    restart: unless-stopped

  # MongoDB
  mongodb:
    image: mongo:6
    container_name: liqpro-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - liqpro-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis
  redis:
    image: redis:7
    container_name: liqpro-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - liqpro-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: liqpro-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-liqpro}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS:-liqpro_password}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - liqpro-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  liqpro-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  rabbitmq_data: 